Video --- https://youtu.be/dpxk81zFLF4
Github Repo --- https://github.com/Ashfaque-9x/swiggy-clone-b
=============================================================================================================================================================================================================================
[A] Let's use Terraform to create an EC2 instance for EC2 Runner, Docker and SonarQube
1 -- Content Of main.tf
resource "aws_instance" "web" {
  ami                    = "ami-0287a05f0ef0e9d9a"      #change ami id for different region
  instance_type          = "t2.medium"
  key_name               = "Linux-VM-Key-6"              #change key name as per your setup
  vpc_security_group_ids = [aws_security_group.GitHubAction-VM-SG.id]
  user_data              = templatefile("./install.sh", {})

  tags = {
    Name = "GitHubAction-SonarQube"
  }

  root_block_device {
    volume_size = 40
  }
}

resource "aws_security_group" "GitHubAction-VM-SG" {
  name        = "GitHubAction-VM-SG"
  description = "Allow TLS inbound traffic"

  ingress = [
    for port in [22, 80, 443, 8080, 9000, 3000] : {
      description      = "inbound rules"
      from_port        = port
      to_port          = port
      protocol         = "tcp"
      cidr_blocks      = ["0.0.0.0/0"]
      ipv6_cidr_blocks = []
      prefix_list_ids  = []
      security_groups  = []
      self             = false
    }
  ]

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name = "GitHubAction-VM-SG"
  }
}


2 -- Content Of provider.tf
terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 5.0"
    }
  }
}

# Configure the AWS Provider
provider "aws" {
  region = "ap-south-1"     #change region as per you requirement
}



3 -- Content Of install.sh
#!/bin/bash
sudo apt update -y
wget -O - https://packages.adoptium.net/artifactory/api/gpg/key/public | tee /etc/apt/keyrings/adoptium.asc
echo "deb [signed-by=/etc/apt/keyrings/adoptium.asc] https://packages.adoptium.net/artifactory/deb $(awk -F= '/^VERSION_CODENAME/{print$2}' /etc/os-release) main" | tee /etc/apt/sources.list.d/adoptium.list
sudo apt update -y
sudo apt install temurin-17-jdk -y
/usr/bin/java --version

##Install Docker and Run SonarQube as Container
sudo apt-get update
sudo apt-get install docker.io -y
sudo usermod -aG docker ubuntu
newgrp docker
sudo chmod 777 /var/run/docker.sock
docker run -d --name sonar -p 9000:9000 sonarqube:lts-community

#install trivy
sudo apt-get install wget apt-transport-https gnupg lsb-release -y
wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
sudo apt-get update
sudo apt-get install trivy -y

#Install unzip
sudo apt-get install unzip



4 -- Terraform Commands
terraform init, terraform plan, terraform apply -auto-approve

=============================================================================================================================================================================================================================
[B] Trivy FS Scan of Code
cd ~ 
cd actions-runner
./run.sh
cat trivyfs.txt
=============================================================================================================================================================================================================================
[C] Create AWS EKS Cluster using eksctl
1 -- Install kubectl on EC2
 sudo apt update
 sudo apt install curl
 curl -LO https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl
 sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
 kubectl version --client

2 -- Install AWS CLI
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
sudo apt install unzip
unzip awscliv2.zip
sudo ./aws/install
aws --version

3 -- Installing  eksctl
curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
cd /tmp
sudo mv /tmp/eksctl /bin
eksctl version

4 -- Setup Kubernetes using eksctl
eksctl create cluster --name virtualtechbox-cluster \
--region ap-south-1 \
--node-type t2.small \
--nodes 3 \

5 -- Verify Cluster with below command
kubectl get nodes
kubectl get all
=============================================================================================================================================================================================================================
[D] Verify CICD Pipeline through gitbash
git config --global user.name "Your.Name"
git config --global user.email "your.email@gmail.com"
git clone https://github.com/Ashfaque-9x/swiggy-clone-b
git add .
git commit -m "Changed Banner"
git push -u origin main  //after giving this command it may ask you to provide your github credentials
=============================================================================================================================================================================================================================
[E] Cleanup
kubectl get all    ///It will show all the deployment & services.
kubectl delete deployment.apps/swiggy-app
kubectl delete service/swiggy-app
eksctl delete cluster virtualtechbox-cluster --region ap-south-1

docker ps -a
docker stop xxx
docker rm xxx

terraform destroy
=============================================================================================================================================================================================================================
[A] Complete Content Of swiggy-build-and-deploy.yml

name: Build

on:
  push:
    branches:
      - main


jobs:
  build-analyze-scan:
    name: Build
    runs-on: [self-hosted]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clone should be disabled for a better relevancy of analysis.
      - name: Build and analyze with SonarQube    
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Trivy File Scan
        run: trivy fs . > trivyfs.txt

      - name: Docker Build and Push
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
             image: ashfaque9x/swiggy-app
             registry: docker.io
             username: ${{ secrets.DOCKERHUB_USERNAME }}
             password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Trivy Image Scan
        run: trivy image ashfaque9x/swiggy-app > trivyimage.txt


     
  Deploy:
   needs: build-analyze-scan
   runs-on: [self-hosted]
   steps:
     - name: Update kubeconfig
       run: aws eks --region ap-south-1 update-kubeconfig --name virtualtechbox-cluster

     - name: Deploy to Kubernetes
       run: kubectl apply -f deployment-and-service.yml

     - name: Send a Slack Notification
       if: always()
       uses: act10ns/slack@v1
       with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#github-action'
       env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}  

=============================================================================================================================================================================================================================
